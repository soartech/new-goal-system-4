# Elaborate the operator's return values to the substate
sp "ngs*core*substate*elaborate-return-values
    [ngs-match-substate <ss> <top-state> <superstate>]
    (<superstate> ^operator.return-values <ret-values>)
-->
    (<ss> ^return-values <ret-values>)"

#########
# Augments operator to create a return value with the destination object (the ret-val-set)
sp "ngs*core*ret-vals*elaborate-operator*$NGS_OP_CREATE_RET_VAL*fill-in-return-val-set
  [ngs-match-proposed-operator <s> <o> $NGS_OP_CREATE_RET_VAL]
  (<s> ^$NGS_RETURN_VALUES <ret-val-set>) 
-->
  (<o> ^dest-object <ret-val-set> +)"

#########
# Augments operator to set a return value with the destination object (the ret-val-set)
sp "ngs*core*ret-vals*elaborate-operator*$NGS_OP_SET_RETURN_VALUE*fill-in-missing-values
  [ngs-match-proposed-operator <s> <o> $NGS_OP_CREATE_RET_VAL]
  (<o>           ^ret-val-name       <ret-val-name>)
  (<s>           ^$NGS_RETURN_VALUES <ret-val-set>)
  (<ret-val-set> ^value-description  <v-desc>)
  (<v-desc>      ^name               <ret-val-name>) 
-->
  (<o> ^dest-object <v-desc> +)
  (<o> ^dest-attribute value +)"

# Augments operator to create a goal as a return value
sp "ngs*core*ret-vals*elaborate-operator*$NGS_OP_CREATE_GOAL_RET*fill-in-return-val-set
  [ngs-match-proposed-operator <s> <o> $NGS_OP_CREATE_GOAL_RET]
  [ngs-match-goalpool <top-state> <goals>] 
  (<s> ^$NGS_RETURN_VALUES <ret-val-set>)
  (<o> ^new-obj            <new-ret-val>)
-->
  (<o>           ^dest-object        <ret-val-set> +)
  (<new-ret-val> ^destination-object <goals>)"

########### FIXED ##################
# Copy a return value into the set of all return values for a substate
sp "ngs*core*substate*apply*$NGS_OP_SET_RETURN_VALUE*with-name
  [ngs-match-substate <ss> <top-state> <superstate>]
  [ngs-match-selected-operator <superstate> <o> <op-name>]
  (<o> ^type           $NGS_OP_DECIDE
       ^return-values  <op-ret-val-set>)
  (<op-ret-val-set>   ^value-description <op-ret-val>)
  (<op-ret_val>       ^name <ret-val-name>
                      ^value <ret-val>)
  (<ss> ^return-values  <ret-val-set>)
  (<ret-val-set> ^value-description <v-desc>)
  (<v-desc>      ^name <ret-val-name>
                -^value)
-->
  (<v-desc> ^value <ret-val>)"


########## THIS IS GOOD AS IT IS ########
# In every substate with a ret-values attribute, we propose a least
#  preference operator to copy the return values to the top-state
#
sp "ngs*core*substate*propose*$NGS_OP_COPY_RETURN_VALUES
	[ngs-match-substate <ss> <top-state> <superstate>]
	(<ss> ^return-values <ret-val-set>)
	[ngs-is-not-tagged <ss> $NGS_TAG_SUBSTATE_RESULT_RETURNED]
-->
	[ngs-create-atomic-operator <ss> $NGS_OP_COPY_RETURN_VALUES <o> <]"

############ THIS HAS TO REMAIN A SHALLOW COPY ####################
# Apply operator to return the return values to the locations specified in the
#  return value set. There are three variations depending on whether the return
#  value is a member of a set or whether there already exists a value for the
#  return value attribute

sp "ngs*core*substate*apply*$NGS_OP_COPY_RETURN_VALUES*single-copy*create-new
	[ngs-match-selected-operator-in-substate <ss> <o> $NGS_OP_COPY_RETURN_VALUES]
	(<ss> ^return-values <ret-val-set>)
	(<ret-val-set> ^value-description <rv-obj>)
	(<rv-obj>      ^destination-object    <dest>
	 			   ^destination-attribute <attr>
	 			   ^value                 <ret-val>
	 			   ^replacement-behavior  $NGS_REPLACE_IF_EXISTS)
	(<dest>       -^<attr>)
-->
	(<dest>        ^<attr>         <ret-val> +)"

sp "ngs*core*apply*$NGS_OP_COPY_RETURN_VALUES*single-copy*replace-existing
	[ngs-match-selected-operator-in-substate <ss> <o> $NGS_OP_COPY_RETURN_VALUES]
	(<ss> ^return-values <ret-val-set>)
	(<ret-val-set> ^value-description     <rv-obj>)
	(<rv-obj>      ^destination-object    <dest>
	 			   ^destination-attribute <attr>
	 			   ^value                 <ret-val>
	 			   ^replacement-behavior  $NGS_REPLACE_IF_EXISTS)
	(<dest>        ^<attr>         <old-val>)
-->
	(<dest>        ^<attr>         <old-val> -)
	(<dest>        ^<attr>         <ret-val> +)"

sp "ngs*core*apply*$NGS_OP_COPY_RETURN_VALUES*insert-into-set
	[ngs-match-selected-operator-in-substate <ss> <o> $NGS_OP_COPY_RETURN_VALUES]
	(<ss> ^return-values <ret-val-set>)
	(<ret-val-set> ^value-description     <rv-obj>)
	(<rv-obj>      ^destination-object    <dest>
	 			   ^destination-attribute <attr>
	 			   ^value                 <ret-val>
	 			   ^replacement-behavior  $NGS_ADD_TO_SET)
-->
	(<dest>        ^<attr>         <ret-val> +)"

